# Cascade Linter Configuration
# Generated by --init-config

[tool.cascade-linter]
# Which linting stages to run by default
# Options: ["ruff", "flake8", "pylint", "bandit", "mypy"]
default_stages = ["ruff", "flake8", "pylint", "bandit", "mypy"]

# Only check without applying fixes
check_only = false

# Apply Ruff's unsafe fixes (more aggressive)
unsafe_fixes = false

# Respect .gitignore file when scanning
respect_gitignore = true

# Maximum line length (affects multiple linters)
max_line_length = 88

# Exclude patterns (beyond .gitignore)
exclude_patterns = [
    "backup/",
    "*.bak",
    "*_backup*", 
    "*.broken",
    "test_*.py",  # Exclude test files that aren't in tests/ folder
]

[tool.cascade-linter.output]
# Use simple text output (disable Rich tables/colors)
simple_output = false

# Enable verbose progress output
verbose = false

# Enable debug output for troubleshooting
debug = false

# Automatically save detailed logs
save_logs = true

# Keep logs for this many days
keep_logs_days = 30

[tool.cascade-linter.stages]
# Individual stage configuration

[tool.cascade-linter.stages.ruff]
enabled = true
# Additional Ruff-specific options can go here

[tool.cascade-linter.stages.flake8]
enabled = true
# Extend ignore codes (comma-separated)
extend_ignore = "E203,W503"  # Black compatibility

[tool.cascade-linter.stages.pylint]
enabled = true
# Disable specific pylint warnings
disable = "C0114,C0115,C0116"  # Docstring warnings

[tool.cascade-linter.stages.bandit]
enabled = true
# Bandit security level: low, medium, high
severity_level = "medium"

[tool.cascade-linter.stages.mypy]
enabled = true
# Ignore missing imports for third-party libraries
ignore_missing_imports = true

# Example usage:
# cascade-linter                     # Use config defaults
# cascade-linter --config other.toml # Use different config
# cascade-linter --ruff-only         # Override config, run only Ruff
